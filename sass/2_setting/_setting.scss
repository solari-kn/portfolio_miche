@charset "utf-8";

// htmlのクラス名はcamelCaseでエレメントは_でつなぐ
// htmlのmodは--でつなぐ
// sassの変数はcamelCase
// sassのミックスインは-でつなぐ
/////////////////////////////////////////////////////
// 変数定義
/////////////////////////////////////////////////////

$monts: "Montserrat", sans-serif;
$notos: "Noto Sans JP", sans-serif;
$footerColor: #5b622e;
$modularscale: (
  base: 14px,
  ratio: $golden,
  ipad: (
    base: 16px,
    ratio: $golden
  ),
  m: (
    base: 14px,
    ratio: $golden
  ),
  l: (
    base: 16px,
    ratio: $golden
  ),
  480px: (
    base: 8px,
    ratio: $golden
  ),
  960px: (
    base: 12px,
    ratio: $golden
  ),
  1600px: (
    base: 20px,
    ratio: $golden
  )
);

/////////////////////////////////////////////////////
// メディアクエリ
/////////////////////////////////////////////////////

// モバイルファースト
$breakpoints: (
  m: "(min-width: 480px)",
  ipad: "(min-width: 768px)",
  l: "(min-width: 960px)",
  xl: "(min-width: 1280px)"
);

@mixin media($breakpoint: ipad) {
  @if map-has-key($breakpoints, $breakpoint) {
    // マップにキーが有るか調べる
    @media #{map-get($breakpoints, $breakpoint)} {
      @content;
    }
  } @else {
    // なかった場合のエラー表示
    @error "$breakpointsにはキー #{$breakpoint} 　は存在しません";
  }
}
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
// フォント
/////////////////////////////////////////////////////

h1 {
  font-family: $monts;
  font-weight: 400;
  font-size: ms(2);
  letter-spacing: 0.05em;
  @include media(l) {
    font-size: ms(2, $thread: l);
  }
}

h3 {
  font-family: $monts;
  font-weight: 300;
  font-size: ms(1);
  letter-spacing: 0.05em;
  @include media(l) {
    font-size: ms(1, $thread: l);
  }
}

p {
  font-family: $notos;
  font-weight: 300;
  font-size: ms(0);
  letter-spacing: 0.08em;

  @include media(l) {
    font-size: ms(0, $thread: l);
  }
}

a {
  text-decoration: none;
}

/////////////////////////////////////////////////////
// ミックスインでリンクホバーの呼び出し
/////////////////////////////////////////////////////

@mixin link-color($normal, $hover) {
  color: $normal;
  &:hover {
    color: $hover;
    text-decoration: none;
  }
}

@mixin button() {
  font-family: $monts;
  cursor: pointer;
  font-weight: 500;
  color: #000;
  display: block;
  background: transparent;
  transition: all 0.3s ease;
  border: 3px solid #000;
  border-radius: 70px;
  padding: 11px 30px;
  outline: none;
  font-size: ms(1);
  @include media(l) {
    font-size: ms(1, $thread: l);
  }
  &:hover {
    color: #e4e4e4;
    background: #000000;
    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
    transform: translateY(-3px);
  }
}
/////////////////////////////////////////////////////
// z-index
/////////////////////////////////////////////////////
// マップ型の変数  呼び出しにはmap-get($変数, マップ名)
$layer: (
  modal: 100,
  header: 20,
  tooltip: 10,
  default: 1
);

@mixin z-index($key: default) {
  z-index: map-get($layer, $key);
}

/////////////////////////////////////////////////////
// 埋め込み動画の比率
/////////////////////////////////////////////////////

@mixin rwd-iframe($width: 16, $height: 9) {
  position: relative;
  padding-top: percentage($height / $width); // 比率をパーセテージ化する計算
  > iframe {
    position: absolute; // 親要素上に表示
    top: 2.5%;
    left: 2.5%; // 余白を作る場合の中央指定、余白なしは0
    width: 95% !important;
    height: 95% !important; //余白なしは100%
  }
}
